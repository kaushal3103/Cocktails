{"ast":null,"code":"var _jsxFileName = \"C:\\\\Hacktoberfest Open Source\\\\Cocktails\\\\src\\\\context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { useCallback } from 'react';\nconst url = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\nconst AppContext = /*#__PURE__*/React.createContext();\n\nconst AppProvider = ({\n  children\n}) => {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('a');\n  const [cocktails, setCocktails] = useState([]);\n\n  const fetchDrinks = async () => {\n    setLoading(true);\n\n    try {\n      const response = await fetch(`${url}${searchTerm}`);\n      const data = await response.json();\n      const {\n        drinks\n      } = data;\n\n      if (drinks) {\n        const newCocktails = drinks.map(item => {\n          const {\n            idDrink,\n            strDrink,\n            strDrinkThumb,\n            strAlcoholic,\n            strGlass\n          } = item;\n          return {\n            id: idDrink,\n            name: strDrink,\n            image: strDrinkThumb,\n            info: strAlcoholic,\n            glass: strGlass\n          };\n        });\n        setCocktails(newCocktails);\n      } else {\n        setCocktails([]);\n      }\n\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchDrinks();\n  }, [searchTerm]);\n  return /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: {\n      loading,\n      searchTerm,\n      cocktails,\n      setSearchTerm\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, children);\n};\n\n_s(AppProvider, \"kyg1IkyEp0He0yQ67g1LbjdDy9E=\");\n\n_c = AppProvider;\nexport const useGlobalContext = () => {\n  _s2();\n\n  return useContext(AppContext);\n};\n\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { AppProvider, AppContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"sources":["C:/Hacktoberfest Open Source/Cocktails/src/context.js"],"names":["React","useState","useContext","useEffect","useCallback","url","AppContext","createContext","AppProvider","children","loading","setLoading","searchTerm","setSearchTerm","cocktails","setCocktails","fetchDrinks","response","fetch","data","json","drinks","newCocktails","map","item","idDrink","strDrink","strDrinkThumb","strAlcoholic","strGlass","id","name","image","info","glass","error","useGlobalContext"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,WAAT,QAA4B,OAA5B;AAEA,MAAMC,GAAG,GAAG,2DAAZ;AAEA,MAAMC,UAAU,gBAAGN,KAAK,CAACO,aAAN,EAAnB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACpC,QAAM,CAACC,OAAD,EAASC,UAAT,IAAuBV,QAAQ,CAAC,IAAD,CAArC;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,GAAD,CAA5C;AACA,QAAM,CAACa,SAAD,EAAWC,YAAX,IAA2Bd,QAAQ,CAAC,EAAD,CAAzC;;AAEA,QAAMe,WAAW,GAAG,YAAS;AAC3BL,IAAAA,UAAU,CAAC,IAAD,CAAV;;AAEF,QAAG;AACD,YAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEb,GAAI,GAAEO,UAAW,EAArB,CAA5B;AACA,YAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEA,YAAM;AAAEC,QAAAA;AAAF,UAAaF,IAAnB;;AACA,UAAKE,MAAL,EAAa;AACd,cAAMC,YAAY,GAAGD,MAAM,CAACE,GAAP,CAAYC,IAAD,IAAQ;AACtC,gBAAM;AACHC,YAAAA,OADG;AAEJC,YAAAA,QAFI;AAGJC,YAAAA,aAHI;AAIJC,YAAAA,YAJI;AAKJC,YAAAA;AALI,cAMFL,IANJ;AAQA,iBAAO;AACJM,YAAAA,EAAE,EAACL,OADC;AAEJM,YAAAA,IAAI,EAACL,QAFD;AAGJM,YAAAA,KAAK,EAACL,aAHF;AAIJM,YAAAA,IAAI,EAACL,YAJD;AAKJM,YAAAA,KAAK,EAACL;AALF,WAAP;AAQA,SAjBmB,CAArB;AAkBCd,QAAAA,YAAY,CAACO,YAAD,CAAZ;AACD,OApBC,MAoBG;AACHP,QAAAA,YAAY,CAAC,EAAD,CAAZ;AACD;;AACDJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AAEC,KA9BD,CA8BC,OAAMwB,KAAN,EACD;AACCxB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA;AAEA,GAtCD;;AAwCAR,EAAAA,SAAS,CAAC,MAAI;AACZa,IAAAA,WAAW;AACZ,GAFQ,EAEP,CAACJ,UAAD,CAFO,CAAT;AAIA,sBACE,oBAAC,UAAD,CAAY,QAAZ;AACA,IAAA,KAAK,EAAE;AACLF,MAAAA,OADK;AAELE,MAAAA,UAFK;AAGLE,MAAAA,SAHK;AAILD,MAAAA;AAJK,KADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGJ,QARH,CADF;AAYD,CA7DD;;GAAMD,W;;KAAAA,W;AA+DN,OAAO,MAAM4B,gBAAgB,GAAE,MAAI;AAAA;;AACjC,SAAOlC,UAAU,CAACI,UAAD,CAAjB;AACD,CAFM;;IAAM8B,gB;;AAIb,SAAU5B,WAAV,EAAuBF,UAAvB","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\r\nimport { useCallback } from 'react'\r\n\r\nconst url = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s='\r\n\r\nconst AppContext = React.createContext();\r\n\r\nconst AppProvider = ({ children }) => {\r\n  const [loading,setLoading] = useState(true);\r\n  const [searchTerm ,setSearchTerm] = useState('a');\r\n  const [cocktails,setCocktails] = useState([]);\r\n\r\n  const fetchDrinks = async()=>{\r\n    setLoading(true);\r\n\r\n  try{\r\n    const response = await fetch(`${url}${searchTerm}`);\r\n    const data = await response.json();\r\n\r\n    const { drinks } = data;\r\n    if ( drinks ){\r\n   const newCocktails = drinks.map((item)=>{\r\n     const {\r\n        idDrink,\r\n       strDrink,\r\n       strDrinkThumb,\r\n       strAlcoholic,\r\n       strGlass\r\n     } = item;\r\n\r\n     return {\r\n        id:idDrink,\r\n        name:strDrink,\r\n        image:strDrinkThumb,\r\n        info:strAlcoholic,\r\n        glass:strGlass\r\n     }\r\n   \r\n    })\r\n    setCocktails(newCocktails);\r\n  }else{\r\n    setCocktails([]);\r\n  }\r\n  setLoading(false);\r\n\r\n  }catch(error)\r\n  {\r\n   setLoading(false);\r\n  }\r\n  \r\n  }\r\n\r\n  useEffect(()=>{\r\n    fetchDrinks();\r\n  },[searchTerm])\r\n\r\n  return (\r\n    <AppContext.Provider\r\n    value={{\r\n      loading,\r\n      searchTerm,\r\n      cocktails,\r\n      setSearchTerm,\r\n    }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useGlobalContext =()=>{\r\n  return useContext(AppContext);\r\n}\r\n\r\nexport {  AppProvider ,AppContext}\r\n"]},"metadata":{},"sourceType":"module"}